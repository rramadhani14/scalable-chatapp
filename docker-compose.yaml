services:
#  chatapp-1:
#    image: dhani/chatapp-main:1.0-SNAPSHOT
#    ports:
#      - 8092:8090
#    environment:
#      QUARKUS_APPLICATION_NAME: chatapp-1
#      KAFKA_GROUP_ID: chatapp-1
#      KAFKA_BOOTSTRAP_SERVERS: kafka-1:9092
#      QUARKUS_DATASOURCE_REACTIVE_URL: postgresql://postgres:5432/quarkus_test
#      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres:5432/quarkus_test
#      QUARKUS_FLYWAY_JDBC_URL: jdbc:postgresql://postgres:5432/quarkus_test
#    deploy:
#      replicas: 0
#  chatapp:
#    image: dhani/chatapp-main:1.0-SNAPSHOT
#    ports:
#      - 8091:8090
#    environment:
#      KAFKA_BOOTSTRAP_SERVERS: kafka-1:9092
#      QUARKUS_APPLICATION_NAME: chatapp-0
#      KAFKA_GROUP_ID: chatapp-0
#      QUARKUS_DATASOURCE_REACTIVE_URL: postgresql://postgres:5432/quarkus_test
#      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres:5432/quarkus_test
#      QUARKUS_FLYWAY_JDBC_URL: jdbc:postgresql://postgres:5432/quarkus_test
#    deploy:
#      replicas: 0
  kafka-1:
    image: apache/kafka:latest
    container_name: kafka-1
    ports:
      - 9092:9092
      - 9093:9093
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://kafka-1:9092,CONTROLLER://kafka-1:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-1:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    deploy:
      resources:
        limits:
          memory: 384m
#  redpanda-0:
#    command:
#      - redpanda
#      - start
#      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
#      # Address the broker advertises to clients that connect to the Kafka API.
#      # Use the internal addresses to connect to the Redpanda brokers
#      # from inside the same Docker network.
#      # Use the external addresses to connect to the Redpanda brokers
#      # from outside the Docker network.
#      - --advertise-kafka-addr internal://redpanda-0:9092,external://localhost:19092
#      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
#      # Address the broker advertises to clients that connect to the HTTP Proxy.
#      - --advertise-pandaproxy-addr internal://redpanda-0:8082,external://localhost:18082
#      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
#      # Redpanda brokers use the RPC API to communicate with each other internally.
#      - --rpc-addr redpanda-0:33145
#      - --advertise-rpc-addr redpanda-0:33145
#      # Mode dev-container uses well-known configuration properties for development in containers.
#      - --mode dev-container
#      # Tells Seastar (the framework Redpanda uses under the hood) to use 1 core on the system.
#      - --smp 1
#      - --default-log-level=info
#    image: docker.redpanda.com/redpandadata/redpanda:v25.1.9
#    container_name: redpanda-0
#    # Sets the username and password of the bootstrap SCRAM superuser
#    # See https://docs.redpanda.com/current/deploy/deployment-option/self-hosted/manual/production/production-deployment/#bootstrap-a-user-account
#    environment:
#      RP_BOOTSTRAP_USER: "superuser:secretpassword"
#    volumes:
#      - redpanda-0:/var/lib/redpanda/data
#      - ./bootstrap.yml:/etc/redpanda/.bootstrap.yaml
#    networks:
#      - redpanda_network
#    ports:
#      - 18081:18081
#      - 18082:18082
#      - 19092:19092
#      - 19644:9644
#    healthcheck:
#      test: [ "CMD", "rpk", "cluster", "info", "-X", "user=superuser", "-X", "pass=secretpassword" ]
#      interval: 10s
#      timeout: 15s
#      retries: 10
#    depends_on:
#      minio:
#        condition: service_healthy
  redpanda-console:
    image: docker.redpanda.com/redpandadata/console:latest
    ports:
      - 8081:8080
    environment:
      KAFKA_BROKERS: kafka-1:9092
  postgres:
    image: postgres:latest
    ports:
      - 5433:5432
    environment:
      POSTGRES_USER: quarkus_test
      POSTGRES_PASSWORD: quarkus_test
      POSTGRES_DB: quarkus_test